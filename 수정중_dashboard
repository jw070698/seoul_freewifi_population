# 3. 시각화 및 대시보드(Rshiny) - 인사이트 도출 ####
library(shiny)
library(shinydashboard)
library(ggplot2)
library(plotly)
library(wordcloud)
library(wordcloud2)
library(RColorBrewer)
library(stringr)

#source("SeoulWifi_EDA.r")
load("Wifi_map_merge.rda")
load("gu_count.rda")
load("wifi_pop.rda")
gu_name<-read.csv("gu_name.csv")
pop_rank5<-read.csv("pop_rank5.csv")

create_wordcloud <- function() {
  radius=gu_count$총생활인구수 #글씨 크기
  pal<-brewer.pal(8,"Dark2")
  set.seed(123)
  #par(family="AppleGothic") #!!폰트 저장하는 과정
  wordcloud<-wordcloud(words=gu_count$name,freq=radius,random.order=F,rot.per=.1,colors=pal)
  return(wordcloud)
}

create_treemap <- function() {
  library(treemap)
  treemap<-treemap(gu_count,
                   index="name",
                   vSize="총생활인구수", # 타일의 크기
                   vColor="총생활인구수", # 타일의 컬러
                   type="value", # 타일 컬러링 방법
                   bg.labels="yellow",fontfamily.labels="AppleGothic") # 레이블의 배경색
  return(treemap)
}

ui <- dashboardPage(
  dashboardHeader(title="생활인구수를 통한 와이파이 추가적인 설치 필요 지역 탐색", titleWidth=600),
  dashboardSidebar(
    sidebarMenu(
      menuItem("EDA", tabName = "EDA",icon=icon("bar-chart-o")),
      menuItem("INSIGHT", tabName="INSIGHT",icon=icon("list-alt"))
    )
  ),
  dashboardBody(
    tabItems(
      # 1번째 tab content
      tabItem(tabName = "EDA",
              fluidRow(h3(" - 서울시 공공와이파이 서비스 위치 정보"),
                       column(7,                   # 행렬 기준 열의 너비 지정
                              box(selectInput(inputId = "year",
                                              "연도를 고르세요",
                                              width=400,
                                              list(2019,2020,2021)), width=3),
                              box(title="서울시 자치구별 공공와이파이",status="primary",solidHeader=TRUE,collapsible=TRUE,
                                  plotOutput(outputId = "map", width=400),width=7)),
                       
                       column(4, offset = -10,
                              imageOutput("image"))),
              
              fluidRow(h3(" - 행정동별 서울생활인구(내국인)"),
                       column(8,                      # 행렬 기준 열의 너비 지정
                              box(radioButtons(inputId = "graph",
                                               "그래프를 고르세요",width=400,
                                               choices=c("WordCloud","TreeMap")), width=3),
                              box(title="서울시 자치구별 유동인구", status="primary",solidHeader=TRUE,collapsible=TRUE,
                                  plotOutput(outputId = "graph_out", width=400))),
                       column(4,offset = -10,
                              box(title="서울시 내 자치구 총생활인구 top5 ", status="primary",solidHeader=TRUE,collapsible=TRUE,
                                  plotOutput(outputId = "pieChart", width = 400), width=11))
              )
              )
      #두번째 tap content
      ,tabItem(tabName = "INSIGHT",
                      fluidRow(
                        box(
                          selectInput(inputId = "year_i",
                                      "연도를 고르세요",
                                      width=250,
                                      list(2019,2020,2021)
                          ), width=1
                        ),
                        box(title="생활인구 수 대비 공공와이파이 설치 수",solidHeader=TRUE, collapsible=TRUE,
                            plotOutput(outputId = "ratio", width = 1300), width=10)
                      ),
                      fluidRow(
                        column(width=3,
                               box(title="Top 5",
                                   tableOutput(outputId = "top")),
                               box(title="Least 5",
                                   tableOutput(outputId = "least"))
                      )
                      )
      )
    )
  )
  )

  
server <- function(input, output) {
    plot <- reactive({
      ggplot() + geom_polygon(data = merge[merge$설치년도==input$year,], aes(x=long, y=lat, group=group, fill = cum_count)) +
        labs(fill="설치 누적 개수")+
        geom_text(data=gu_name, aes(x=long, y=lat, label=gu))+
        scale_fill_gradient(low = "#ffe5e5", high = "#ff3232", space = "Lab", guide = "colourbar") +
        coord_map()+
        ggtitle(label=input$year)+
        theme(plot.title=element_text(hjust=0.5, face='bold'))
    })
    
    ## image
    # Render Image File
    output$image = renderImage({
      list(src = "년도별wifi설치.png")
    }, deleteFile = FALSE)
    
    ## WordCloud, Treemap
    output$map=renderPlot({
      #    options(repr.plot.width = 300, repr.plot.height = 100)
      print(plot())
    })
    output$graph_out=renderPlot({
      if (input$graph=="WordCloud") {
        create_wordcloud()
      }
      if (input$graph=="TreeMap") {
        create_treemap()
      }
    })
    
    ## Piechart
    output$pieChart <- renderPlot({
      circle <- table(pop_rank5$name)
      label <- paste(pop_rank5$name, "\n", pop_rank5$sum_population)
      pie(circle, labels=label)
    })
    
    output$ratio=renderPlot({
      #barplot(ratio~자치구,wifi_pop[wifi_pop$year==input$year,], main=input$year,xlab="자치구", ylab="누적 설치 수/생활인구 수", col=rainbow(5))
      y=input$year_i
      ggplot(wifi_pop[wifi_pop$year==y,], aes(x=reorder(자치구,-ratio), y=ratio, fill=자치구))+geom_bar(stat="identity", width=0.8)+
        ggtitle(paste(input$year_i,"년"))+xlab("자치구")+ylab("누적 설치 수/생활인구 수")+
        theme(plot.title=element_text(hjust=0.5))+
        theme(axis.text.y = element_blank())+
        theme_bw()
    })
    output$least=renderTable({
      wifi_pop_y<-wifi_pop[wifi_pop$year==2021,]
      wifi_pop_order<-wifi_pop_y[order(wifi_pop_y$ratio, decreasing = FALSE),]
      wifi_pop_order[1:5,4]}, colnames = FALSE, align = "c"
      
      
      
      
      # wifi_pop_y<-wifi_pop[wifi_pop$year==2021,]
      # wifi_pop_order<-wifi_pop_y[order(wifi_pop_y$ratio, decreasing = FALSE),]
      # datatable(wifi_pop_order[1:5,])
      # print("안녀아세요")
    )
    output$top=renderTable({
      wifi_pop_y<-wifi_pop[wifi_pop$year==2021,]
      wifi_pop_order<-wifi_pop_y[order(wifi_pop_y$ratio, decreasing = TRUE),]
      wifi_pop_order[1:5,4]}, colnames = FALSE
    )
  }
  
  
shinyApp(ui=ui, server=server)
  
